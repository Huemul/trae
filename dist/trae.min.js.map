{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///trae.min.js","webpack:///webpack/bootstrap d5f69ee76f7ebb9ff800","webpack:///./lib/index.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./~/trae-query/lib/index.js","webpack:///./~/trae-query/lib/build.js","webpack:///./~/trae-query/lib/parse.js","webpack:///./lib/middleware.js","webpack:///./lib/config.js","webpack:///./lib/utils.js","webpack:///./~/merge/merge.js","webpack:///(webpack)/buildin/module.js","webpack:///./lib/helpers/url-handler.js","webpack:///./lib/helpers/response-handler.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","buildQuery","Middleware","Config","skip","urlHandler","responseHandler","Trae","config","arguments","undefined","_middleware","_config","baseUrl","_initMethodsWithBody","_initMethodsWithNoBody","value","constructor","middlewares","request","fulfill","reject","response","get","set","_baseUrl","method","mergedConfig","mergeWithDefaults","url","format","params","_fetch","_this","resolveRequests","then","fetch","res","bodyType","resolveResponses","_this2","forEach","path","_this3","body","self","normalizeName","name","String","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","support","iterable","Symbol","Headers","headers","map","append","getOwnPropertyNames","consumed","bodyUsed","Promise","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","type","rejected","text","decode","json","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","Request","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","e","list","push","values","getAll","has","hasOwnProperty","callback","thisArg","keys","entries","clone","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","build","parseQuery","encodeURI","reduce","acc","includes","_decodeURI$split","decodeURI","_decodeURI$split2","_slicedToArray","query","pair","_pair$split","_pair$split2","parseValue","number","parseFloat","Number","isNaN","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","err","Array","isArray","identity","rejection","_req","_res","fn","promise","task","_typeof","obj","merge","DEFAULT_HEADERS","Accept","Content-Type","DEFAULT_CONFIG","xsrfCookieName","xsrfHeaderName","_defaults","_len","configParams","_key","concat","stringify","mergeRecursive","skipped","objKey","recursive","isNode","merge_recursive","base","extend","typeOf","argv","size","index","item","sitem","Public","slice","publicName","output","window","webpackPolyfill","deprecate","paths","children","combineURLs","baseURL","relativeURL","isAbsoluteURL","formatURLs","combine","isAbsolute","wrapResponse","data"],"mappings":"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","file":"trae.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"trae\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"trae\"] = factory();\n\telse\n\t\troot[\"trae\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"trae\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"trae\"] = factory();\n\telse\n\t\troot[\"trae\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t__webpack_require__(1);\n\tvar buildQuery = __webpack_require__(2).buildQuery;\n\t\n\tvar Middleware = __webpack_require__(5);\n\tvar Config = __webpack_require__(6);\n\tvar skip = __webpack_require__(7).skip;\n\tvar urlHandler = __webpack_require__(10);\n\tvar responseHandler = __webpack_require__(11);\n\t\n\tvar Trae = function () {\n\t  function Trae() {\n\t    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Trae);\n\t\n\t    this._middleware = new Middleware();\n\t    this._config = new Config(skip(config, ['baseUrl']));\n\t\n\t    this.baseUrl(config.baseUrl || '');\n\t    this._initMethodsWithBody();\n\t    this._initMethodsWithNoBody();\n\t  }\n\t\n\t  _createClass(Trae, [{\n\t    key: 'create',\n\t    value: function create(config) {\n\t      return new this.constructor(config);\n\t    }\n\t  }, {\n\t    key: 'use',\n\t    value: function use() {\n\t      var middlewares = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      if (middlewares.config) {\n\t        this._middleware.request(middlewares.config);\n\t      }\n\t      if (middlewares.fulfill || middlewares.reject) {\n\t        this._middleware.response(middlewares.fulfill, middlewares.reject);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'defaults',\n\t    value: function defaults(config) {\n\t      if (typeof config === 'undefined') {\n\t        return this._config.get();\n\t      }\n\t      this._config.set(skip(config, ['baseUrl']));\n\t      config.baseUrl && this.baseUrl(config.baseUrl);\n\t      return this._config.get();\n\t    }\n\t  }, {\n\t    key: 'baseUrl',\n\t    value: function baseUrl(_baseUrl) {\n\t      if (typeof _baseUrl === 'undefined') {\n\t        return this._baseUrl;\n\t      }\n\t      this._baseUrl = _baseUrl;\n\t      return this._baseUrl;\n\t    }\n\t  }, {\n\t    key: 'request',\n\t    value: function request() {\n\t      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      config.method || (config.method = 'get');\n\t      var mergedConfig = this._config.mergeWithDefaults(config);\n\t      var url = buildQuery(urlHandler.format(this._baseUrl, config.url), config.params);\n\t\n\t      return this._fetch(url, mergedConfig);\n\t    }\n\t  }, {\n\t    key: '_fetch',\n\t    value: function _fetch(url, config) {\n\t      var _this = this;\n\t\n\t      return this._middleware.resolveRequests(config).then(function (config) {\n\t        return fetch(url, config);\n\t      }).then(function (res) {\n\t        return responseHandler(res, config.bodyType);\n\t      }).then(function (res) {\n\t        return _this._middleware.resolveResponses(res);\n\t      });\n\t    }\n\t  }, {\n\t    key: '_initMethodsWithNoBody',\n\t    value: function _initMethodsWithNoBody() {\n\t      var _this2 = this;\n\t\n\t      ['get', 'delete', 'head'].forEach(function (method) {\n\t        _this2[method] = function (path) {\n\t          var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t          var mergedConfig = _this2._config.mergeWithDefaults(config, { method: method });\n\t          var url = buildQuery(urlHandler.format(_this2._baseUrl, path), config.params);\n\t\n\t          return _this2._fetch(url, mergedConfig);\n\t        };\n\t      });\n\t    }\n\t  }, {\n\t    key: '_initMethodsWithBody',\n\t    value: function _initMethodsWithBody() {\n\t      var _this3 = this;\n\t\n\t      ['post', 'put', 'patch'].forEach(function (method) {\n\t        _this3[method] = function (path, body, config) {\n\t          var mergedConfig = _this3._config.mergeWithDefaults(config, { body: body, method: method });\n\t          var url = urlHandler.format(_this3._baseUrl, path);\n\t\n\t          return _this3._fetch(url, mergedConfig);\n\t        };\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Trae;\n\t}();\n\t\n\tmodule.exports = new Trae();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar build = __webpack_require__(3);\n\tvar parse = __webpack_require__(4);\n\t\n\tmodule.exports = {\n\t  buildQuery: build,\n\t  parseQuery: parse\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Build query params strings from the keys and values of an object\n\t *\n\t * @param {String} url The url to append the query to\n\t * @param {Object} params The object to build the query from\n\t * @returns {String} The query string\n\t */\n\t\n\tfunction buildQuery() {\n\t  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t  var keys = Object.keys(params);\n\t\n\t  if (keys.length === 0) {\n\t    return url;\n\t  }\n\t\n\t  return url + encodeURI(keys.reduce(function (acc, key) {\n\t    return acc + '&' + key + '=' + (params[key] || '');\n\t  }, '?').replace('?&', '?'));\n\t}\n\t\n\tmodule.exports = buildQuery;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t/**\n\t * Parses a url to get the query params\n\t *\n\t * @param {String} url The url to parse\n\t * @returns {Object} A map of the query keys & values\n\t */\n\tfunction parseQuery() {\n\t  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t\n\t  if (!url.includes('?')) {\n\t    return {};\n\t  }\n\t  var params = {};\n\t\n\t  var _decodeURI$split = decodeURI(url).split('?'),\n\t      _decodeURI$split2 = _slicedToArray(_decodeURI$split, 2),\n\t      query = _decodeURI$split2[1];\n\t\n\t  var pairs = query.split('&');\n\t\n\t  pairs.forEach(function (pair) {\n\t    var _pair$split = pair.split('='),\n\t        _pair$split2 = _slicedToArray(_pair$split, 2),\n\t        key = _pair$split2[0],\n\t        value = _pair$split2[1];\n\t\n\t    params[key] = parseValue(value);\n\t  });\n\t  return params;\n\t}\n\t\n\tfunction parseValue(value) {\n\t  if (value === '') {\n\t    return undefined;\n\t  }\n\t  if (value === 'true') {\n\t    return true;\n\t  }\n\t  if (value === 'false') {\n\t    return false;\n\t  }\n\t  var number = parseFloat(value);\n\t  // eslint-disable-next-line eqeqeq\n\t  if (Number.isNaN(number) || number != value) {\n\t    return value;\n\t  }\n\t  return number;\n\t}\n\t\n\tmodule.exports = parseQuery;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar identity = function identity(response) {\n\t  return response;\n\t};\n\tvar rejection = function rejection(err) {\n\t  return Promise.reject(err);\n\t};\n\t\n\tvar Middleware = function () {\n\t  function Middleware() {\n\t    _classCallCheck(this, Middleware);\n\t\n\t    this._req = [];\n\t    this._res = [];\n\t  }\n\t\n\t  _createClass(Middleware, [{\n\t    key: \"request\",\n\t    value: function request(fn) {\n\t      this._req.push(fn);\n\t      return this._req.length - 1;\n\t    }\n\t  }, {\n\t    key: \"response\",\n\t    value: function response() {\n\t      var fulfill = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : identity;\n\t      var reject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : rejection;\n\t\n\t      this._res.push({ fulfill: fulfill, reject: reject });\n\t      return this._res.length - 1;\n\t    }\n\t  }, {\n\t    key: \"resolveRequests\",\n\t    value: function resolveRequests(config) {\n\t      return this._req.reduce(function (promise, task) {\n\t        promise = promise.then(task);\n\t        return promise;\n\t      }, Promise.resolve(config));\n\t    }\n\t  }, {\n\t    key: \"resolveResponses\",\n\t    value: function resolveResponses(response) {\n\t      return this._res.reduce(function (promise, task) {\n\t        promise = promise.then(task.fulfill, task.reject);\n\t        return promise;\n\t      }, Promise.resolve(response));\n\t    }\n\t  }]);\n\t\n\t  return Middleware;\n\t}();\n\t\n\tmodule.exports = Middleware;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar merge = __webpack_require__(7).merge;\n\t\n\tvar DEFAULT_HEADERS = {\n\t  'Accept': 'application/json, text/plain, */*', // eslint-disable-line quote-props\n\t  'Content-Type': 'application/json'\n\t};\n\t\n\tvar DEFAULT_CONFIG = {\n\t  xsrfCookieName: 'XSRF-TOKEN',\n\t  xsrfHeaderName: 'X-XSRF-TOKEN'\n\t};\n\t\n\tvar Config = function () {\n\t  function Config() {\n\t    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Config);\n\t\n\t    this._defaults = merge(DEFAULT_CONFIG, { headers: DEFAULT_HEADERS });\n\t    this._config = {};\n\t\n\t    this.set(config);\n\t  }\n\t\n\t  _createClass(Config, [{\n\t    key: 'mergeWithDefaults',\n\t    value: function mergeWithDefaults() {\n\t      for (var _len = arguments.length, configParams = Array(_len), _key = 0; _key < _len; _key++) {\n\t        configParams[_key] = arguments[_key];\n\t      }\n\t\n\t      var config = merge.apply(undefined, [this._defaults, this._config].concat(configParams));\n\t      if (_typeof(config.body) === 'object' && config.headers && config.headers['Content-Type'] === 'application/json') {\n\t        config.body = JSON.stringify(config.body);\n\t      }\n\t      return config;\n\t    }\n\t  }, {\n\t    key: 'set',\n\t    value: function set(config) {\n\t      this._config = merge(this._config, config);\n\t    }\n\t  }, {\n\t    key: 'get',\n\t    value: function get() {\n\t      return merge(this._defaults, this._config);\n\t    }\n\t  }]);\n\t\n\t  return Config;\n\t}();\n\t\n\tmodule.exports = Config;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar mergeRecursive = __webpack_require__(8).recursive;\n\t\n\t/**\n\t * Recursively merge objects\n\t *\n\t * @param {Object} objects to merge\n\t * @return {Object} the merged objects\n\t */\n\tfunction merge() {\n\t  for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n\t    params[_key] = arguments[_key];\n\t  }\n\t\n\t  return mergeRecursive.apply(undefined, [true].concat(params));\n\t}\n\t\n\t/**\n\t * Returns an object with the skipped properties\n\t *\n\t * @param {Object} obj the object to skip properties from\n\t * @param {[String]} keys keys of the properties to skip\n\t * @return {Object} the object with the properties skipped\n\t */\n\tfunction skip(obj, keys) {\n\t  var skipped = {};\n\t  Object.keys(obj).forEach(function (objKey) {\n\t    if (keys.indexOf(objKey) === -1) {\n\t      skipped[objKey] = obj[objKey];\n\t    }\n\t  });\n\t  return skipped;\n\t}\n\t\n\tmodule.exports = {\n\t  merge: merge,\n\t  skip: skip\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {/*!\r\n\t * @name JavaScript/NodeJS Merge v1.2.0\r\n\t * @author yeikos\r\n\t * @repository https://github.com/yeikos/js.merge\r\n\t\r\n\t * Copyright 2014 yeikos - MIT license\r\n\t * https://raw.github.com/yeikos/js.merge/master/LICENSE\r\n\t */\r\n\t\r\n\t;(function(isNode) {\r\n\t\r\n\t\t/**\r\n\t\t * Merge one or more objects \r\n\t\t * @param bool? clone\r\n\t\t * @param mixed,... arguments\r\n\t\t * @return object\r\n\t\t */\r\n\t\r\n\t\tvar Public = function(clone) {\r\n\t\r\n\t\t\treturn merge(clone === true, false, arguments);\r\n\t\r\n\t\t}, publicName = 'merge';\r\n\t\r\n\t\t/**\r\n\t\t * Merge two or more objects recursively \r\n\t\t * @param bool? clone\r\n\t\t * @param mixed,... arguments\r\n\t\t * @return object\r\n\t\t */\r\n\t\r\n\t\tPublic.recursive = function(clone) {\r\n\t\r\n\t\t\treturn merge(clone === true, true, arguments);\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Clone the input removing any reference\r\n\t\t * @param mixed input\r\n\t\t * @return mixed\r\n\t\t */\r\n\t\r\n\t\tPublic.clone = function(input) {\r\n\t\r\n\t\t\tvar output = input,\r\n\t\t\t\ttype = typeOf(input),\r\n\t\t\t\tindex, size;\r\n\t\r\n\t\t\tif (type === 'array') {\r\n\t\r\n\t\t\t\toutput = [];\r\n\t\t\t\tsize = input.length;\r\n\t\r\n\t\t\t\tfor (index=0;index<size;++index)\r\n\t\r\n\t\t\t\t\toutput[index] = Public.clone(input[index]);\r\n\t\r\n\t\t\t} else if (type === 'object') {\r\n\t\r\n\t\t\t\toutput = {};\r\n\t\r\n\t\t\t\tfor (index in input)\r\n\t\r\n\t\t\t\t\toutput[index] = Public.clone(input[index]);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Merge two objects recursively\r\n\t\t * @param mixed input\r\n\t\t * @param mixed extend\r\n\t\t * @return mixed\r\n\t\t */\r\n\t\r\n\t\tfunction merge_recursive(base, extend) {\r\n\t\r\n\t\t\tif (typeOf(base) !== 'object')\r\n\t\r\n\t\t\t\treturn extend;\r\n\t\r\n\t\t\tfor (var key in extend) {\r\n\t\r\n\t\t\t\tif (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {\r\n\t\r\n\t\t\t\t\tbase[key] = merge_recursive(base[key], extend[key]);\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbase[key] = extend[key];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn base;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Merge two or more objects\r\n\t\t * @param bool clone\r\n\t\t * @param bool recursive\r\n\t\t * @param array argv\r\n\t\t * @return object\r\n\t\t */\r\n\t\r\n\t\tfunction merge(clone, recursive, argv) {\r\n\t\r\n\t\t\tvar result = argv[0],\r\n\t\t\t\tsize = argv.length;\r\n\t\r\n\t\t\tif (clone || typeOf(result) !== 'object')\r\n\t\r\n\t\t\t\tresult = {};\r\n\t\r\n\t\t\tfor (var index=0;index<size;++index) {\r\n\t\r\n\t\t\t\tvar item = argv[index],\r\n\t\r\n\t\t\t\t\ttype = typeOf(item);\r\n\t\r\n\t\t\t\tif (type !== 'object') continue;\r\n\t\r\n\t\t\t\tfor (var key in item) {\r\n\t\r\n\t\t\t\t\tvar sitem = clone ? Public.clone(item[key]) : item[key];\r\n\t\r\n\t\t\t\t\tif (recursive) {\r\n\t\r\n\t\t\t\t\t\tresult[key] = merge_recursive(result[key], sitem);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tresult[key] = sitem;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Get type of variable\r\n\t\t * @param mixed input\r\n\t\t * @return string\r\n\t\t *\r\n\t\t * @see http://jsperf.com/typeofvar\r\n\t\t */\r\n\t\r\n\t\tfunction typeOf(input) {\r\n\t\r\n\t\t\treturn ({}).toString.call(input).slice(8, -1).toLowerCase();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif (isNode) {\r\n\t\r\n\t\t\tmodule.exports = Public;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\twindow[publicName] = Public;\r\n\t\r\n\t\t}\r\n\t\r\n\t})(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module)))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Creates a new URL by combining the specified URLs\n\t *\n\t * @param {string} baseURL The base URL\n\t * @param {string} relativeURL The relative URL\n\t * @returns {string} The combined URL\n\t */\n\t\n\tfunction combineURLs(baseURL, relativeURL) {\n\t  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n\t}\n\t\n\t/**\n\t * Determines whether the specified URL is absolute\n\t *\n\t * @param {string} url The URL to test\n\t * @returns {boolean} True if the specified URL is absolute, otherwise false\n\t */\n\tfunction isAbsoluteURL(url) {\n\t  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n\t  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n\t  // by any combination of letters, digits, plus, period, or hyphen.\n\t  return (/^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\n\t  ); // eslint-disable-line\n\t}\n\t\n\tfunction formatURLs(baseUrl, relativeURL) {\n\t  if (!baseUrl || isAbsoluteURL(relativeURL)) {\n\t    return relativeURL;\n\t  }\n\t\n\t  return combineURLs(baseUrl, relativeURL);\n\t}\n\t\n\tmodule.exports = {\n\t  format: formatURLs,\n\t  combine: combineURLs,\n\t  isAbsolute: isAbsoluteURL\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Wrapp a response\n\t *\n\t * @param {Object} response response object\n\t * @param {String} reader type of reader to use on response body\n\t * @return {Promise} resolves to the wrapped read response\n\t */\n\tfunction wrapResponse(response, reader) {\n\t  return response[reader]().then(function (data) {\n\t    return {\n\t      headers: response.headers,\n\t      status: response.status,\n\t      statusText: response.statusText,\n\t      data: data\n\t    };\n\t  });\n\t}\n\t\n\t/**\n\t * Reads or rejects a fetch request response\n\t *\n\t * @param {Object} response response object\n\t * @param {String} reader type of reader to use on response body\n\t * @return {Promise} read or rejection promise\n\t */\n\tfunction responseHandler(response, reader) {\n\t  if (!response.ok) {\n\t    var err = new Error(response.statusText);\n\t    err.status = response.status;\n\t    err.statusText = response.statusText;\n\t    err.headers = response.headers;\n\t    return Promise.reject(err);\n\t  }\n\t  if (reader) {\n\t    return wrapResponse(response, reader);\n\t  }\n\t  if (response.headers.get('Content-Type') === 'application/json') {\n\t    return wrapResponse(response, 'json');\n\t  }\n\t  return wrapResponse(response, 'text');\n\t}\n\t\n\tmodule.exports = responseHandler;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// trae.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d5f69ee76f7ebb9ff800","require('whatwg-fetch');\nconst buildQuery = require('trae-query').buildQuery;\n\nconst Middleware      = require('./middleware');\nconst Config          = require('./config');\nconst skip            = require('./utils').skip;\nconst urlHandler      = require('./helpers/url-handler');\nconst responseHandler = require('./helpers/response-handler');\n\nclass Trae {\n  constructor(config = {}) {\n    this._middleware = new Middleware();\n    this._config     = new Config(skip(config, ['baseUrl']));\n\n    this.baseUrl(config.baseUrl || '');\n    this._initMethodsWithBody();\n    this._initMethodsWithNoBody();\n  }\n\n  create(config) {\n    return new this.constructor(config);\n  }\n\n  use(middlewares = {}) {\n    if (middlewares.config) {\n      this._middleware.request(middlewares.config);\n    }\n    if (middlewares.fulfill || middlewares.reject) {\n      this._middleware.response(middlewares.fulfill, middlewares.reject);\n    }\n  }\n\n  defaults(config) {\n    if (typeof config === 'undefined') {\n      return this._config.get();\n    }\n    this._config.set(skip(config, ['baseUrl']));\n    config.baseUrl && this.baseUrl(config.baseUrl);\n    return this._config.get();\n  }\n\n  baseUrl(baseUrl) {\n    if (typeof baseUrl === 'undefined') {\n      return this._baseUrl;\n    }\n    this._baseUrl = baseUrl;\n    return this._baseUrl;\n  }\n\n  request(config = {}) {\n    config.method || (config.method = 'get');\n    const mergedConfig = this._config.mergeWithDefaults(config);\n    const url          = buildQuery(urlHandler.format(this._baseUrl, config.url), config.params);\n\n    return this._fetch(url, mergedConfig);\n  }\n\n  _fetch(url, config) {\n    return this._middleware.resolveRequests(config)\n    .then(config => fetch(url, config))\n    .then(res => responseHandler(res, config.bodyType))\n    .then(res => this._middleware.resolveResponses(res));\n  }\n\n  _initMethodsWithNoBody() {\n    ['get', 'delete', 'head'].forEach((method) => {\n      this[method] = (path, config = {}) => {\n        const mergedConfig = this._config.mergeWithDefaults(config, { method });\n        const url          = buildQuery(urlHandler.format(this._baseUrl, path), config.params);\n\n        return this._fetch(url, mergedConfig);\n      };\n    });\n  }\n\n  _initMethodsWithBody() {\n    ['post', 'put', 'patch'].forEach((method) => {\n      this[method] = (path, body, config) => {\n        const mergedConfig = this._config.mergeWithDefaults(config, { body, method });\n        const url          = urlHandler.format(this._baseUrl, path);\n\n        return this._fetch(url, mergedConfig);\n      };\n    });\n  }\n\n}\n\nmodule.exports = new Trae();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 1\n// module chunks = 0","const build = require('./build')\nconst parse = require('./parse')\n\nmodule.exports = {\n  buildQuery: build,\n  parseQuery: parse\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/trae-query/lib/index.js","/**\n * Build query params strings from the keys and values of an object\n *\n * @param {String} url The url to append the query to\n * @param {Object} params The object to build the query from\n * @returns {String} The query string\n */\n\n\n\nfunction buildQuery(url = '', params = {}) {\n  const keys = Object.keys(params)\n\n  if (keys.length === 0) {\n    return url\n  }\n\n  return url + encodeURI(keys\n    .reduce((acc, key) => `${acc}&${key}=${params[key] || ''}`, '?')\n    .replace('?&', '?')\n  )\n}\n\nmodule.exports = buildQuery\n\n\n\n// WEBPACK FOOTER //\n// ./~/trae-query/lib/build.js","/**\n * Parses a url to get the query params\n *\n * @param {String} url The url to parse\n * @returns {Object} A map of the query keys & values\n */\nfunction parseQuery(url = '') {\n  if (!url.includes('?')) {\n    return {}\n  }\n  const params = {}\n  const [, query] = decodeURI(url).split('?')\n\n  const pairs = query.split('&')\n\n  pairs.forEach(pair => {\n    const [key, value] = pair.split('=')\n    params[key] = parseValue(value)\n  })\n  return params\n}\n\nfunction parseValue(value) {\n  if (value === '') {\n    return undefined\n  }\n  if (value === 'true') {\n    return true\n  }\n  if (value === 'false') {\n    return false\n  }\n  const number = parseFloat(value)\n  // eslint-disable-next-line eqeqeq\n  if (Number.isNaN(number) || number != value) {\n    return value\n  }\n  return number\n}\n\nmodule.exports = parseQuery\n\n\n\n// WEBPACK FOOTER //\n// ./~/trae-query/lib/parse.js","const identity  = response => response;\nconst rejection = err => Promise.reject(err);\n\nclass Middleware {\n  constructor() {\n    this._req = [];\n    this._res = [];\n  }\n\n  request(fn) {\n    this._req.push(fn);\n    return this._req.length - 1;\n  }\n\n  response(fulfill = identity, reject = rejection) {\n    this._res.push({ fulfill, reject });\n    return this._res.length - 1;\n  }\n\n  resolveRequests(config) {\n    return this._req.reduce((promise, task) => {\n      promise = promise.then(task);\n      return promise;\n    }, Promise.resolve(config));\n  }\n\n  resolveResponses(response) {\n    return this._res.reduce((promise, task) => {\n      promise = promise.then(task.fulfill, task.reject);\n      return promise;\n    }, Promise.resolve(response));\n  }\n}\n\nmodule.exports = Middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/middleware.js","const merge = require('./utils').merge;\n\nconst DEFAULT_HEADERS = {\n  'Accept'      : 'application/json, text/plain, */*', // eslint-disable-line quote-props\n  'Content-Type': 'application/json'\n};\n\nconst DEFAULT_CONFIG = {\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN'\n};\n\nclass Config {\n  constructor(config = {}) {\n    this._defaults = merge(DEFAULT_CONFIG, { headers: DEFAULT_HEADERS });\n    this._config   = {};\n\n    this.set(config);\n  }\n\n  mergeWithDefaults(...configParams) {\n    const config = merge(this._defaults, this._config, ...configParams);\n    if (\n      typeof config.body === 'object' &&\n      config.headers &&\n      config.headers['Content-Type'] === 'application/json'\n    ) {\n      config.body = JSON.stringify(config.body);\n    }\n    return config;\n  }\n\n  set(config) {\n    this._config = merge(this._config, config);\n  }\n\n  get() {\n    return merge(this._defaults, this._config);\n  }\n}\n\nmodule.exports = Config;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/config.js","const mergeRecursive = require('merge').recursive;\n\n/**\n * Recursively merge objects\n *\n * @param {Object} objects to merge\n * @return {Object} the merged objects\n */\nfunction merge(...params)  {\n  return mergeRecursive(true, ...params);\n}\n\n/**\n * Returns an object with the skipped properties\n *\n * @param {Object} obj the object to skip properties from\n * @param {[String]} keys keys of the properties to skip\n * @return {Object} the object with the properties skipped\n */\nfunction skip(obj, keys) {\n  const skipped = {};\n  Object.keys(obj).forEach((objKey) => {\n    if (keys.indexOf(objKey) === -1) {\n      skipped[objKey] = obj[objKey];\n    }\n  });\n  return skipped;\n}\n\nmodule.exports = {\n  merge,\n  skip\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils.js","/*!\r\n * @name JavaScript/NodeJS Merge v1.2.0\r\n * @author yeikos\r\n * @repository https://github.com/yeikos/js.merge\r\n\r\n * Copyright 2014 yeikos - MIT license\r\n * https://raw.github.com/yeikos/js.merge/master/LICENSE\r\n */\r\n\r\n;(function(isNode) {\r\n\r\n\t/**\r\n\t * Merge one or more objects \r\n\t * @param bool? clone\r\n\t * @param mixed,... arguments\r\n\t * @return object\r\n\t */\r\n\r\n\tvar Public = function(clone) {\r\n\r\n\t\treturn merge(clone === true, false, arguments);\r\n\r\n\t}, publicName = 'merge';\r\n\r\n\t/**\r\n\t * Merge two or more objects recursively \r\n\t * @param bool? clone\r\n\t * @param mixed,... arguments\r\n\t * @return object\r\n\t */\r\n\r\n\tPublic.recursive = function(clone) {\r\n\r\n\t\treturn merge(clone === true, true, arguments);\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Clone the input removing any reference\r\n\t * @param mixed input\r\n\t * @return mixed\r\n\t */\r\n\r\n\tPublic.clone = function(input) {\r\n\r\n\t\tvar output = input,\r\n\t\t\ttype = typeOf(input),\r\n\t\t\tindex, size;\r\n\r\n\t\tif (type === 'array') {\r\n\r\n\t\t\toutput = [];\r\n\t\t\tsize = input.length;\r\n\r\n\t\t\tfor (index=0;index<size;++index)\r\n\r\n\t\t\t\toutput[index] = Public.clone(input[index]);\r\n\r\n\t\t} else if (type === 'object') {\r\n\r\n\t\t\toutput = {};\r\n\r\n\t\t\tfor (index in input)\r\n\r\n\t\t\t\toutput[index] = Public.clone(input[index]);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Merge two objects recursively\r\n\t * @param mixed input\r\n\t * @param mixed extend\r\n\t * @return mixed\r\n\t */\r\n\r\n\tfunction merge_recursive(base, extend) {\r\n\r\n\t\tif (typeOf(base) !== 'object')\r\n\r\n\t\t\treturn extend;\r\n\r\n\t\tfor (var key in extend) {\r\n\r\n\t\t\tif (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {\r\n\r\n\t\t\t\tbase[key] = merge_recursive(base[key], extend[key]);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbase[key] = extend[key];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Merge two or more objects\r\n\t * @param bool clone\r\n\t * @param bool recursive\r\n\t * @param array argv\r\n\t * @return object\r\n\t */\r\n\r\n\tfunction merge(clone, recursive, argv) {\r\n\r\n\t\tvar result = argv[0],\r\n\t\t\tsize = argv.length;\r\n\r\n\t\tif (clone || typeOf(result) !== 'object')\r\n\r\n\t\t\tresult = {};\r\n\r\n\t\tfor (var index=0;index<size;++index) {\r\n\r\n\t\t\tvar item = argv[index],\r\n\r\n\t\t\t\ttype = typeOf(item);\r\n\r\n\t\t\tif (type !== 'object') continue;\r\n\r\n\t\t\tfor (var key in item) {\r\n\r\n\t\t\t\tvar sitem = clone ? Public.clone(item[key]) : item[key];\r\n\r\n\t\t\t\tif (recursive) {\r\n\r\n\t\t\t\t\tresult[key] = merge_recursive(result[key], sitem);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresult[key] = sitem;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get type of variable\r\n\t * @param mixed input\r\n\t * @return string\r\n\t *\r\n\t * @see http://jsperf.com/typeofvar\r\n\t */\r\n\r\n\tfunction typeOf(input) {\r\n\r\n\t\treturn ({}).toString.call(input).slice(8, -1).toLowerCase();\r\n\r\n\t}\r\n\r\n\tif (isNode) {\r\n\r\n\t\tmodule.exports = Public;\r\n\r\n\t} else {\r\n\r\n\t\twindow[publicName] = Public;\r\n\r\n\t}\r\n\r\n})(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/merge/merge.js\n// module id = 8\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 9\n// module chunks = 0","/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\n\nfunction combineURLs(baseURL, relativeURL) {\n  return `${baseURL.replace(/\\/+$/, '')}/${relativeURL.replace(/^\\/+/, '')}`;\n}\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url); // eslint-disable-line\n}\n\nfunction formatURLs(baseUrl, relativeURL) {\n  if (!baseUrl || isAbsoluteURL(relativeURL)) {\n    return relativeURL;\n  }\n\n  return combineURLs(baseUrl, relativeURL);\n}\n\nmodule.exports = {\n  format    : formatURLs,\n  combine   : combineURLs,\n  isAbsolute: isAbsoluteURL\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/url-handler.js","/**\n * Wrapp a response\n *\n * @param {Object} response response object\n * @param {String} reader type of reader to use on response body\n * @return {Promise} resolves to the wrapped read response\n */\nfunction wrapResponse(response, reader) {\n  return response[reader]()\n  .then(data => ({\n    headers   : response.headers,\n    status    : response.status,\n    statusText: response.statusText,\n    data\n  }));\n}\n\n/**\n * Reads or rejects a fetch request response\n *\n * @param {Object} response response object\n * @param {String} reader type of reader to use on response body\n * @return {Promise} read or rejection promise\n */\nfunction responseHandler(response, reader) {\n  if (!response.ok) {\n    const err       = new Error(response.statusText);\n    err.status      = response.status;\n    err.statusText  = response.statusText;\n    err.headers     = response.headers;\n    return Promise.reject(err);\n  }\n  if (reader) {\n    return wrapResponse(response, reader);\n  }\n  if (response.headers.get('Content-Type') === 'application/json') {\n    return wrapResponse(response, 'json');\n  }\n  return wrapResponse(response, 'text');\n}\n\nmodule.exports = responseHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/helpers/response-handler.js"],"sourceRoot":""}